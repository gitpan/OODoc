=head1 NAME

OODoc::Format::Pod2 - Produce POD pages from the doc tree with a template

=head1 INHERITANCE

 OODoc::Format::Pod2
   is a OODoc::Format::Pod
   is a OODoc::Format
   is a OODoc::Object

 OODoc::Format::Pod2
   is a OODoc::Format::TemplateMagic

=head1 SYNOPSIS

 my $doc = OODoc->new(...);
 $doc->create
   ( 'pod2'   # or 'OODoc::Format::Pod2'
   , format_options => [show_examples => 'NO']
   );

=head1 DESCRIPTION

Create manual pages in the POD syntax, using the Template::Magic
template system.  It may be a bit simpler to configure the outcome
using the template, than using L<OODoc::Format::Pod|OODoc::Format::Pod>, however you
first need to install L<Bundle::Template::Magic>.

=head1 METHODS

=head2 Constructors

=over 4

=item OODoc::Format::Pod2-E<gt>B<new>(OPTIONS)

See L<OODoc::Format/"METHODS">

=back

=head2 Inheritance knowledge

=over 4

=item $obj-E<gt>B<extends>([OBJECT])

See L<OODoc::Object/"Inheritance knowledge">

=back

=head2 Attributes

=over 4

=item $obj-E<gt>B<manifest>

See L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<project>

See L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<version>

See L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<workdir>

See L<OODoc::Format/"Attributes">

=back

=head2 Page generation

=over 4

=item $obj-E<gt>B<cleanup>(MANUAL, STRING)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<cleanupPOD>(IN, OUT)

See L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<createManual>(OPTIONS)

 -Option        --Defined in     --Default
  append          OODoc::Format::Pod  ''
  format_options  OODoc::Format    []
  manual          OODoc::Format    <required>
  project         OODoc::Format    <required>
  template                         <in code>

=over 2

=item append => STRING|CODE

=item format_options => ARRAY

=item manual => MANUAL

=item project => STRING

=item template => FILENAME

The default template is included in the DATA segment of
L<OODoc::Format::Pod2|OODoc::Format::Pod2>.  You may start your own template
by copying it to a file.

=back

=item $obj-E<gt>B<createOtherPages>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<formatManual>(OPTIONS)

See L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<link>(MANUAL, OBJECT, [TEXT])

See L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<removeMarkup>(STRING)

See L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<showChapter>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showChapterIndex>(FILE, CHAPTER, INDENT)

See L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<showExamples>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionExpand>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionTable>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionUse>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionalChapter>(NAME, OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptions>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showRequiredChapter>(NAME, OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showStructureExpanded>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showStructureRefer>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutine>((@))

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineDescription>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineName>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineUse>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutines>(OPTIONS)

See L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<writeTable>

See L<OODoc::Format::Pod/"Page generation">

=back

=head2 Template processing

=over 4

=item $obj-E<gt>B<templateChapter>

=back

=head2 Commonly used functions

=over 4

=item $obj-E<gt>B<filenameToPackage>(FILENAME)

OODoc::Format::Pod2-E<gt>B<filenameToPackage>(FILENAME)

See L<OODoc::Object/"Commonly used functions">

=item $obj-E<gt>B<mkdirhier>(DIRECTORY)

OODoc::Format::Pod2-E<gt>B<mkdirhier>(DIRECTORY)

See L<OODoc::Object/"Commonly used functions">

=back

=head2 Manual Repository

=over 4

=item $obj-E<gt>B<addManual>(MANUAL)

See L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<mainManual>(NAME)

See L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<manual>(NAME)

See L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<manuals>

See L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<manualsForPackage>(NAME)

See L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<packageNames>

See L<OODoc::Object/"Manual Repository">

=back

=over 4

=item $obj-E<gt>B<zoneGetParameters>(ZONE|STRING)

See L<OODoc::Format::TemplateMagic/"METHODS">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: cannot read prelimary pod from $infn: $!

=item Error: cannot write final pod to $outfn: $!

=item Error: chapter without name in template.

In your template file, a {chapter} statement is used, which is
erroneous, because it requires a chapter name.

=item Error: formatter does not know the version.

=item Error: formatter has no project name.

A formatter was created without a name specified for the project at
hand.  This should be passed with L<new(project)|OODoc::Format/"METHODS">.

=item Error: manual definition requires manual object

A call to L<addManual()|OODoc::Object/"Manual Repository"> expects a new manual object (a L<OODoc::Manual|OODoc::Manual>),
however an incompatible thing was passed.  Usually, intended was a call
to L<manualsForPackage()|OODoc::Object/"Manual Repository"> or L<mainManual()|OODoc::Object/"Manual Repository">.

=item Warning: missing required chapter $name in $manual

=item Error: no directory to put pod manual for $name in

=item Warning: no meaning for container $container in chapter block

=item Error: no package name for pod production

=item Error: no working directory specified.

The formatter has to know where the output can be written.  This
directory must be provided via L<new(workdir)|OODoc::Format/"METHODS">, but was not specified.

=item Warning: unknown subroutine type $type for $name in $manual

=back

=head1 SEE ALSO

This module is part of OODoc distribution version 1.06,
built on January 26, 2011. Website: F<http://perl.overmeer.net/oodoc/>

=head1 LICENSE

Copyrights 2003-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

